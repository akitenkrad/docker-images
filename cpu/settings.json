{
  // General Settings
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.bracketPairColorization.enabled": true,
  "editor.cursorBlinking": "smooth",
  "editor.cursorSmoothCaretAnimation": true,
  "editor.cursorStyle": "line",
  "editor.fontFamily": "CodeM, Utatane, HackGen, Consolas Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 18,
  "editor.fontLigatures": true,
  "editor.formatOnSave": true,
  "editor.renderControlCharacters": true,
  "editor.renderWhitespace": "all",
  "editor.rulers": [
      100,
      120,
      145
  ],
  "editor.suggest.preview": true,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.wordSeparators": "./\\()\"'-:,.;<>~!@#$%^&*|+=[]{}`~?　、。「」【】『』（）！？てにをはがのともへでや",
  "[python]": {
      "editor.defaultFormatter": null,
    "editor.wordBasedSuggestions": false
  },
  "[tex]": {
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.tabSize": 2,
    "editor.wordWrap": "on"
  },
  "[latex]": {
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.tabSize": 2,
    "editor.wordWrap": "on"
  },
  "[bibtex]": {
    "editor.tabSize": 2,
    "editor.wordWrap": "on"
  },
  "files.eol": "\n",
  "git.autofetch": true,
  "workbench.iconTheme": "vs-seti",
  "workbench.startupEditor": "none",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  // Python Settings
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "python.analysis.extraPaths": [
    "/root/miniconda3/envs/python38/lib/python3.8/site-packages",
    "/usr/local/lib/python3.8/site-packages"
  ],
  "python.linting.enabled": true,
  "python.linting.lintOnSave": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": true,
  "python.linting.flake8Args": [
      "--max-line-length=150",
      "--ignore=F401,W503,E203"
  ],
  "python.linting.flake8Path": "flake8",
  "python.linting.flake8CategorySeverity.W": "Warning",
  "python.linting.flake8CategorySeverity.F": "Error",
  "python.linting.flake8CategorySeverity.E": "Error",
  "files.watcherExclude": {
    "**/__cache__/**": true,
    "**/__pycache__/**": true,
    "**/.ipynb_checkpoints/**": true,
    "**/data/**": true,
    "**/log/**": true,
    "**/logs/**": true,
    "**/weights/**": true
  },
  "notebook.lineNumbers": "on",
  "jupyter.askForKernelRestart": false,
  "terminal.integrated.inheritEnv": false,
  "terminal.integrated.fontSize": 16,
  "explorer.confirmDragAndDrop": false,
  // LaTeX Workshop Settings
  // LaTeX Workshop ではビルド設定を「Tool」と「Recipe」という2つで考える
  //   Tool: 実行される1つのコマンド。コマンド (command) と引数 (args) で構成される
  //   Recipe: Tool の組み合わわせを定義する。Tool の組み合わせ (tools) で構成される。
  //           tools の中で利用される Tool は "latex-workshop.latex.tools" で定義されている必要がある。
  "latex-workshop.intellisense.package.enabled": true,
  "latex-workshop.latex.outDir": "out",
  // latex-workshop.latex.tools: Tool の定義
  "latex-workshop.latex.tools": [
    // latexmk を利用した xelatex によるビルドコマンド
    {
      "name": "Latexmk (XeLaTeX)",
      "command": "latexmk",
      "args": [
        "-f",
        "-gg",
        "-pv",
        "-xelatex",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%"
      ]
    },
    // latexmk を利用した uplatex によるビルドコマンド
    {
      "name": "Latexmk (upLaTeX)",
      "command": "latexmk",
      "args": [
        "-f",
        "-gg",
        "-pv",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%"
      ]
    },
    // latexmk を利用した platex によるビルドコマンド
    // 古い LaTeX のテンプレートを使いまわしている (ドキュメントクラスが jreport や jsreport ) 場合のため
    {
      "name": "Latexmk (pLaTeX)",
      "command": "latexmk",
      "args": [
        "-f",
        "-gg",
        "-pv",
        "-latex='platex'",
        "-latexoption='-kanji=utf8 -no-guess-input-env'",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%"
      ]
    },
    // latexmk を利用した lualatex によるビルドコマンド
    {
      "name": "Latexmk (LuaLaTeX)",
      "command": "latexmk",
      "args": [
        "-f",
        "-gg",
        "-pv",
        "-lualatex",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%"
      ]
    }
  ],
  // latex-workshop.latex.recipes: Recipe の定義
  "latex-workshop.latex.recipes": [
    // XeLaTeX で書かれた文書のビルドレシピ
    {
      "name": "XeLaTeX",
      "tools": [
        "Latexmk (XeLaTeX)"
      ]
    },
    // LaTeX(upLaTeX) で書かれた文書のビルドレシピ
    {
      "name": "upLaTeX",
      "tools": [
        "Latexmk (upLaTeX)"
      ]
    },
    // LaTeX(pLaTeX) で書かれた文書のビルドレシピ
    {
      "name": "pLaTeX",
      "tools": [
        "Latexmk (pLaTeX)"
      ]
    },
    // LuaLaTeX で書かれた文書のビルドレシピ
    {
      "name": "LuaLaTeX",
      "tools": [
        "Latexmk (LuaLaTeX)"
      ]
    }
  ],
  // latex-workshop.latex.magic.args: マジックコメント付きの LaTeX ドキュメントをビルドする設定
  // '%!TEX' で始まる行はマジックコメントと呼ばれ、LaTeX のビルド時にビルドプログラムに解釈され、
  // プログラムの挙動を制御する事ができる。
  // 参考リンク: https://blog.miz-ar.info/2016/11/magic-comments-in-tex/
  "latex-workshop.latex.magic.args": [
    "-f",
    "-gg",
    "-pv",
    "-synctex=1",
    "-interaction=nonstopmode",
    "-file-line-error",
    "%DOC%"
  ],
  // latex-workshop.latex.clean.fileTypes: クリーンアップ時に削除されるファイルの拡張子
  // LaTeX 文書はビルド時に一時ファイルとしていくつかのファイルを生成するが、最終的に必要となるのは
  // PDF ファイルのみである場合などが多い。また、LaTeX のビルド時に失敗した場合、失敗時に生成された
  // 一時ファイルの影響で、修正後のビルドに失敗してしまう事がよくある。そのため、一時的なファイルを
  // 削除する機能 (クリーンアップ) が LaTeX Workshop には備わっている。
  "latex-workshop.latex.clean.fileTypes": [
    "*.aux",
    "*.bbl",
    "*.blg",
    "*.idx",
    "*.ind",
    "*.lof",
    "*.lot",
    "*.out",
    "*.toc",
    "*.acn",
    "*.acr",
    "*.alg",
    "*.glg",
    "*.glo",
    "*.gls",
    "*.ist",
    "*.fls",
    "*.log",
    "*.fdb_latexmk",
    "*.synctex.gz",
    // for Beamer files
    "_minted*",
    "*.nav",
    "*.snm",
    "*.vrb"
  ],
  // latex-workshop.view.pdf.viewer: PDF ビューアの開き方
  // VSCode 自体には PDF ファイルを閲覧する機能が備わっていないが、
  // LaTeX Workshop にはその機能が備わっている。
  // "tab" オプションを指定すると、今開いているエディタを左右に分割し、右側に生成されたPDFを表示するようにしてくれる
  // この PDF ビュアーは LaTeX のビルドによって更新されると同期して内容を更新してくれる。
  "latex-workshop.view.pdf.viewer": "tab",
  // latex-workshop.latex.autoClean.run: ビルド失敗時に一時ファイルのクリーンアップを行うかどうか
  // 上記説明にもあったように、ビルド失敗時に生成された一時ファイルが悪影響を及ぼす事があるため、自動で
  // クリーンアップがかかるようにしておく。
  "latex-workshop.latex.autoClean.run": "onFailed",
  // latex-workshop.latex.autoBuild.run: .tex ファイルの保存時に自動的にビルドを行うかどうか
  // LaTeX ファイルは .tex ファイルを変更後にビルドしないと、PDF ファイル上に変更結果が反映されないため、
  // .tex ファイルの保存と同時に自動的にビルドを実行する設定があるが、文書が大きくなるに連れてビルドにも
  // 時間がかかってしまい、ビルドプログラムの負荷がエディタに影響するため、無効化しておく。
  "latex-workshop.latex.autoBuild.run": "never",
  "security.workspace.trust.untrustedFiles": "open",
  "workbench.colorTheme": "Arc Dark",
  "latex-workshop.latex.recipe.default": "",
  "editor.codeActionsOnSave": {},
  "plantuml.commandArgs": [
    "-Xmx2g",
    "-DPLANTUML_LIMIT_SIZE=16384"
  ]
}